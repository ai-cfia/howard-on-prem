apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ragflow-es-data
  labels:
    app.kubernetes.io/component: elasticsearch
spec:
  storageClassName: ceph-hot-block
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ragflow-es
  labels:
    app.kubernetes.io/component: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: elasticsearch
  template:
    metadata:
      labels:
        app.kubernetes.io/component: elasticsearch
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - app-worker
      initContainers:
      - name: fix-data-volume-permissions
        image: alpine
        command:
        - sh
        - -c
        - "chown -R 1000:0 /usr/share/elasticsearch/data"
        volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: es-data
      - name: sysctl
        image: busybox
        securityContext:
          privileged: true
          runAsUser: 0
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
      containers:
      - name: elasticsearch
        image: elasticsearch:{{ .Values.env.STACK_VERSION }}
        envFrom:
          - secretRef:
              name: ragflow-env-config
          - configMapRef:
              name: ragflow-es-config
        ports:
          - containerPort: 9200
            name: http
          - containerPort: 9300
            name: transport
        volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: es-data
        resources:
          requests:
            cpu: "4"
            memory: "16Gi"
        securityContext:
          capabilities:
            add:
              - "IPC_LOCK"
          runAsUser: 1000
          # NOTE: fsGroup doesn't seem to
          # work so use init container instead
          # fsGroup: 1000
          allowPrivilegeEscalation: false
      volumes:
        - name: es-data
          persistentVolumeClaim:
            claimName: ragflow-es-data
---
apiVersion: v1
kind: Service
metadata:
  name: ragflow-es
  labels:
    app.kubernetes.io/component: elasticsearch
spec:
  selector:
    app.kubernetes.io/component: elasticsearch
  ports:
    - protocol: TCP
      port: 9200
      targetPort: http
  type: ClusterIP
