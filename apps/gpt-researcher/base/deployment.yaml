apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpt-researcher-backend
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: gpt-researcher-backend
  template:
    metadata:
      labels:
        app: gpt-researcher-backend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - app-worker
      containers:
        - name: gpt-researcher-backend
          image: ghcr.io/ai-cfia/gpt-researcher:v3.2.5
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: gpt-researcher-secrets
          ports:
            - containerPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpt-researcher-frontend
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: gpt-researcher-frontend
  template:
    metadata:
      labels:
        app: gpt-researcher-frontend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: In
                    values:
                      - app-worker
      containers:
        - name: gpt-researcher-frontend
          image: ghcr.io/ai-cfia/gpt-researcher-ui-dev:v3.2.5
          imagePullPolicy: Always
          env:
            - name: NEXT_PUBLIC_GPTR_API_URL
              value: http://gpt-researcher-backend-svc.gpt-researcher:8000
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: gpt-researcher-frontend-svc
spec:
  clusterIP: None
  selector:
    app: gpt-researcher-frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: gpt-researcher-backend-svc
spec:
  clusterIP: None
  selector:
    app: gpt-researcher-backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gpt-researcher-ingress
  annotations:
    lbipam.cilium.io/ips: 10.140.79.38
    ingress.cilium.io/loadbalancer-mode: dedicated
spec:
  ingressClassName: cilium
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gpt-researcher-frontend-svc
                port:
                  number: 3000
