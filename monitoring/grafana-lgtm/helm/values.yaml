---
grafana:
  # -- Deploy Grafana if enabled. See [upstream readme](https://github.com/grafana/helm-charts/tree/main/charts/grafana#configuration) for full values reference.
  enabled: true
  grafana.ini: # todo, configure keycloak login
    auth.anonymous:
      enabled: true
      org_name: "Main Org."
      org_role: Admin
    auth:
      disable_login_form: true
      auto_assign_org_id: 1
    server:
      root_url: https://grafana-b.inspection.alpha.canada.ca
  # -- Grafana data sources config. Connects to all three by default
  datasources:
    datasources.yaml:
      apiVersion: 1
      # -- Datasources linked to the Grafana instance. Override if you disable any components.
      datasources:
        # https://grafana.com/docs/grafana/latest/datasources/loki/#provision-the-loki-data-source
        - name: Loki
          uid: loki
          type: loki
          url: http://{{ .Release.Name }}-loki-gateway
          isDefault: false
        # https://grafana.com/docs/grafana/latest/datasources/prometheus/#provision-the-data-source
        - name: Mimir
          uid: prom
          type: prometheus
          url: http://{{ .Release.Name }}-mimir-nginx/prometheus
          isDefault: true
        # https://grafana.com/docs/grafana/latest/datasources/tempo/configure-tempo-data-source/#provision-the-data-source
        - name: Tempo
          uid: tempo
          type: tempo
          url: http://{{ .Release.Name }}-tempo-query-frontend:3100
          isDefault: false
          jsonData:
            tracesToLogsV2:
              datasourceUid: loki
            lokiSearch:
              datasourceUid: loki
            tracesToMetrics:
              datasourceUid: prom
            serviceMap:
              datasourceUid: prom
  persistence:
    type: pvc
    enabled: true
    storageClassName: ceph-hot-block
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    finalizers:
      - kubernetes.io/pvc-protection
  ingress:
    enabled: false
    ingressClassName: cilium
    pathType: Prefix
    path: /
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      lbipam.cilium.io/ips: 10.140.79.43
    hosts:
      - grafana.inspection.alpha.canada.ca
    tls:
    - hosts:
        - grafana.inspection.alpha.canada.ca
      secretName: grafana-tls
    
loki:
  # -- Deploy Loki if enabled. See [upstream readme](https://github.com/grafana/helm-charts/tree/main/charts/loki-distributed#values) for full values reference.
  enabled: true
  compactor:
    enabled: true
    persistence:
      enabled: true
      storageClass: ceph-hot-block
      size: 100Gi
      claims:
        - name: data
          size: 100Gi
          storageClass: ceph-hot-block
  indexGateway:
    enabled: true
    persistence:
      enabled: true
      storageClass: ceph-hot-block
      size: 100Gi
  ingester:
    persistence:
      enabled: true
      claims:
        - name: data
          size: 100Gi
          storageClass: ceph-hot-block
  querier:
    persistence:
      enabled: true
      storageClass: ceph-hot-block
      size: 100Gi
  ruler:
    enabled: true
    persistence:
      enabled: true
      storageClass: ceph-hot-block
      size: 100Gi
    extraVolumes:
      - name: loki-rules
        emptyDir: {}
    extraVolumeMounts:
      - name: loki-rules
        mountPath: /etc/loki/rules
        readOnly: false

# -- Mimir chart values. Resources are set to a minimum by default.
mimir:
  # -- Deploy Mimir if enabled. See [upstream values.yaml](https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml) for full values reference.
  enabled: true
  global:
    extraEnvFrom:
      - secretRef:
          name: minio-secret
  mimir:
    structuredConfig:
      common:
        storage:
          backend: s3
          s3:
            bucket_name: mimir
            endpoint: "minio.minio.svc.cluster.local:9000"
            secret_access_key: "${rootPassword}" # This is a secret injected via an environment variable
            access_key_id: "${rootUser}" # This is a secret injected via an environment variable
            insecure: true
            http:
              insecure_skip_verify: true
      blocks_storage:
        s3:
          bucket_name: mimir-blocks
      alertmanager_storage:
        s3:
          bucket_name: mimir-alertmanager
      ruler_storage:
        s3:
          bucket_name: mimir-ruler
  alertmanager:
    persistentVolume:
      storageClass: ceph-hot-block
    resources:
      requests:
        cpu: 20m
  compactor:
    persistentVolume:
      storageClass: ceph-hot-block
    resources:
      requests:
        cpu: 20m
  distributor:
    resources:
      requests:
        cpu: 20m
  ingester:
    replicas: 2
    persistentVolume:
      storageClass: ceph-hot-block
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  overrides_exporter:
    resources:
      requests:
        cpu: 20m
  querier:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  query_frontend:
    resources:
      requests:
        cpu: 20m
  query_scheduler:
    replicas: 1
    resources:
      requests:
        cpu: 20m
  ruler:
    resources:
      requests:
        cpu: 20m
  store_gateway:
    persistentVolume:
      storageClass: ceph-hot-block
    zoneAwareReplication:
      enabled: false
    resources:
      requests:
        cpu: 20m
  minio:
    enabled: false # using the already installed minio
  rollout_operator:
    resources:
      requests:
        cpu: 20m

tempo:
  # -- Deploy Tempo if enabled.  See [upstream readme](https://github.com/grafana/helm-charts/blob/main/charts/tempo-distributed/README.md#values) for full values reference.
  enabled: true
  ingester:
    replicas: 1
    persistence:
      enabled: true
      storageClass: ceph-hot-block
      size: 100Gi

grafana-oncall:
  # -- Deploy Grafana OnCall if enabled. See [upstream values.yaml](https://github.com/grafana/oncall/blob/dev/helm/oncall/values.yaml) for full values reference.
  enabled: false
